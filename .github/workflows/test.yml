name: Test

on:
  workflow_dispatch:
    inputs:
      rebuild:
        description: 'Rebuild the Forge'
        required: false
        default: false
        type: boolean
      preset:
        description: 'Test preset to run'
        required: false
        default: 'Custom'
        type: choice
        options:
          - Full Model Passing
          - Full Model XFailing
          - Models Ops
          - Sweeps
          - Custom
      test_mark:
        description: 'Test mark to run (custom preset)'
        required: false
        default: 'push'
        type: string
      runs-on:
        description: 'Runs on'
        required: false
        type: choice
        options:
          - n150
          - n300
      test_group_cnt:
        description: 'Test group count'
        required: false
        default: "2"
        type: choice
        options:
          - "1"
          - "2"
          - "3"
          - "4"
      operators:
        description: 'Operators to test (comma separated)'
        required: false
        type: string

jobs:

  docker-build:
    uses: ./.github/workflows/build-image.yml
    secrets: inherit

  set-inputs:
    runs-on: ubuntu-latest
    needs: docker-build
    if: always()
    outputs:
      buildtype: ${{ steps.set-inputs.outputs.buildtype }}
      test_group_cnt: ${{ steps.set-inputs.outputs.test_group_cnt }}
      test_group_ids: ${{ steps.set-inputs.outputs.test_group_ids }}
      test_mark: ${{ steps.set-inputs.outputs.test_mark }}
      runs-on: ${{ steps.set-inputs.outputs.runs-on }}
      operators: ${{ steps.set-inputs.outputs.operators }}
      run_id: ${{ steps.set-inputs.outputs.runid }}
    steps:
      - name: Inputs Management
        id: set-inputs
        run: |
          if [ ${{ inputs.rebuild }} == 'true' ]; then
            echo "buildtype=Release" >> $GITHUB_OUTPUT
            echo "runid=${{ github.run_id }}" >> $GITHUB_OUTPUT
          else
            echo "buildtype=None" >> $GITHUB_OUTPUT
          fi
          echo "test_group_cnt=${{ inputs.test_group_cnt }}" >> $GITHUB_OUTPUT
          echo "test_group_ids=[$(seq -s ',' 1 ${{ inputs.test_group_cnt }})]" >> $GITHUB_OUTPUT
          echo "runs-on=[{\"runs-on\": \"${{ inputs.runs-on }}\"}]" >> $GITHUB_OUTPUT
          echo "operators=${{ inputs.operators }}" >> $GITHUB_OUTPUT
          case "${{ inputs.preset }}" in
            "Full Model Passing")
              echo "test_mark='nightly and not xfail'" >> $GITHUB_OUTPUT
              ;;
            "Full Model XFailing")
              echo "test_mark='nightly and xfail'" >> $GITHUB_OUTPUT
              ;;
            "Models Ops")
              echo "test_mark='nightly_models_ops'" >> $GITHUB_OUTPUT
              ;;
            "Sweeps")
              echo "test_mark='nightly_sweeps'" >> $GITHUB_OUTPUT
              ;;
            "Custom")
              echo "test_mark=${{ inputs.test_mark }}" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "Invalid preset"
              exit 1
              ;;
          esac

  build:
    needs:
      - docker-build
      - set-inputs
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      docker-image: ${{ needs.docker-build.outputs.docker-image }}
      build: ${{ needs.set-inputs.outputs.buildtype}}


  run-tests:
    if: always()
    needs:
      - docker-build
      - build
      - set-inputs
    uses: ./.github/workflows/test-sub.yml
    secrets: inherit
    with:
      docker-image: ${{ needs.docker-build.outputs.docker-image }}
      test_mark: ${{ needs.set-inputs.outputs.test_mark }}
      test_group_cnt: ${{ needs.set-inputs.outputs.test_group_cnt }}
      test_group_ids: ${{ needs.set-inputs.outputs.test_group_ids }}
      runs-on: ${{ needs.set-inputs.outputs.runs-on }}
      operators: ${{ needs.set-inputs.outputs.operators }}
      run_id: ${{ needs.set-inputs.outputs.run_id }}
