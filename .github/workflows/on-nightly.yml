name: On nightly

on:
  workflow_dispatch:
    inputs:
      rebuild:
        description: 'Rebuild the Forge'
        required: false
        default: false
        type: boolean
      test_group_cnt:
        description: 'Test group count'
        required: false
        default: "2"
        type: choice
        options:
          - "1"
          - "2"
          - "3"
          - "4"
          - "8"
      run_full_model_passing:
        description: 'Run full model passing tests'
        required: false
        default: true
        type: boolean
      run_full_model_xfailing:
        description: 'Run full model xflailing tests'
        required: false
        default: true
        type: boolean
      run_perf_benchmark:
        description: 'Run performance benchmark tests'
        required: false
        default: true
        type: boolean
      run_models_ops:
        description: 'Run models ops tests'
        required: false
        default: false
        type: boolean
      run_sweeps:
        description: 'Run sweeps tests'
        required: false
        default: false
        type: boolean
  schedule:
    - cron: '0 0 * * *'

jobs:

  docker-build:
    uses: ./.github/workflows/build-image.yml
    secrets: inherit

  set-inputs:
    runs-on: ubuntu-latest
    outputs:
      rebuild: ${{ steps.set-inputs.outputs.rebuild }}
      test_group_cnt: ${{ steps.set-inputs.outputs.test_group_cnt }}
      test_group_ids: ${{ steps.set-inputs.outputs.test_group_ids }}
      run_full_model_passing: ${{ steps.set-inputs.outputs.run_full_model_passing }}
      run_full_model_xfailing: ${{ steps.set-inputs.outputs.run_full_model_xfailing }}
      run_perf_benchmark: ${{ steps.set-inputs.outputs.run_perf_benchmark }}
      run_models_ops: ${{ steps.set-inputs.outputs.run_models_ops }}
      run_sweeps: ${{ steps.set-inputs.outputs.run_sweeps }}
    steps:
      - name: Set Inputs
        id: set-inputs
        run: |
          echo "run_full_model_passing=$(if [ -z ${{ inputs.run_full_model_passing }} ]; then echo 'true'; else echo '${{ inputs.run_full_model_passing }}'; fi)" >> $GITHUB_OUTPUT
          echo "run_full_model_xfailing=$(if [ -z ${{ inputs.run_full_model_xfailing }} ]; then echo 'true'; else echo '${{ inputs.run_full_model_xfailing }}'; fi)" >> $GITHUB_OUTPUT
          echo "run_perf_benchmark=$(if [ -z ${{ inputs.run_perf_benchmark }} ]; then echo 'true'; else echo '${{ inputs.run_perf_benchmark }}'; fi)" >> $GITHUB_OUTPUT
          echo "run_models_ops=$(if [ -z ${{ inputs.run_models_ops }} ]; then echo 'true'; else echo '${{ inputs.run_models_ops }}'; fi)" >> $GITHUB_OUTPUT
          echo "run_sweeps=$(if [ -z ${{ inputs.run_sweeps }} ]; then echo 'true'; else echo '${{ inputs.run_sweeps }}'; fi)" >> $GITHUB_OUTPUT
          if [ -z ${{ inputs.rebuild }} ]; then
            echo "rebuild=All" >> $GITHUB_OUTPUT
          else
            echo "rebuild=$(if [ ${{ inputs.rebuild }} == 'true' ]; then echo 'Release'; else echo 'None'; fi)" >> $GITHUB_OUTPUT
          fi
          echo "test_group_cnt=$(if [ -z ${{ inputs.test_group_cnt }} ]; then echo '10'; else echo '${{ inputs.test_group_cnt }}'; fi)" >> $GITHUB_OUTPUT
          echo "test_group_ids=[$(seq -s ',' 1 ${{ inputs.test_group_cnt }})]" >> $GITHUB_OUTPUT

  build:
    needs:
      - docker-build
      - set-inputs
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      docker-image: ${{ needs.docker-build.outputs.docker-image }}
      build: ${{ needs.set-inputs.outputs.rebuild }}

  test_full_model_passing:
    if: (success() || failure()) && ${{ needs.set-inputs.outputs.run_full_model_passing == 'true' }}
    needs:
      - set-inputs
      - docker-build
      - build
    uses: ./.github/workflows/test-sub.yml
    secrets: inherit
    with:
      test_mark: 'nightly and not xfail'
      test_group_cnt: ${{ needs.set-inputs.outputs.test_group_cnt }}
      test_group_ids: ${{ needs.set-inputs.outputs.test_group_ids }}
      docker-image: ${{ needs.docker-build.outputs.docker-image }}
      runs-on: '[{"runs-on": "n150"}]'
      run_id: ${{ needs.build.outputs.run_id }}

  perf-benchmark:
    if: (success() || failure()) && ${{ needs.set-inputs.outputs.run_perf_benchmark == 'true' }}
    needs:
      - docker-build
      - build
      - set-inputs
    uses: ./.github/workflows/perf-benchmark-sub.yml
    secrets: inherit
    with:
      docker-image: ${{ needs.docker-build.outputs.docker-image }}
      run_id: ${{ needs.build.outputs.run_id }}

  test_full_model_xfailing:
    if: (success() || failure()) && ${{ needs.set-inputs.outputs.run_full_model_xfailing == 'true' }}
    needs:
      - docker-build
      - set-inputs
      - build
    uses: ./.github/workflows/test-sub.yml
    secrets: inherit
    with:
      test_mark: 'nightly and xfail'
      test_group_cnt: ${{ needs.set-inputs.outputs.test_group_cnt }}
      test_group_ids: ${{ needs.set-inputs.outputs.test_group_ids }}
      docker-image: ${{ needs.docker-build.outputs.docker-image }}
      run_id: ${{ needs.build.outputs.run_id }}
      runs-on: '[{"runs-on": "n150"}]'

  test_models_ops:
    if: (success() || failure()) && ${{ needs.set-inputs.outputs.run_models_ops == 'true' }}
    needs:
      - docker-build
      - set-inputs
      - build
      - test_full_model_passing
      - perf-benchmark
      - test_full_model_xfailing
    uses: ./.github/workflows/test-sub.yml
    secrets: inherit
    with:
      test_mark: 'nightly_models_ops'
      test_group_cnt: ${{ needs.set-inputs.outputs.test_group_cnt }}
      test_group_ids: ${{ needs.set-inputs.outputs.test_group_ids }}
      run_id: ${{ needs.build.outputs.run_id }}
      docker-image: ${{ needs.docker-build.outputs.docker-image }}
      runs-on: '[{"runs-on": "n150"}]'
      allow-fail: true

  test_sweeps:
    if: (success() || failure()) && ${{ needs.set-inputs.outputs.run_sweeps == 'true' }}
    needs:
      - docker-build
      - set-inputs
      - build
      - test_models_ops
    uses: ./.github/workflows/test-sub.yml
    secrets: inherit
    with:
      test_mark: 'nightly_sweeps'
      test_group_cnt: ${{ needs.set-inputs.outputs.test_group_cnt }}
      test_group_ids: ${{ needs.set-inputs.outputs.test_group_ids }}
      run_id: ${{ needs.build.outputs.run_id }}
      docker-image: ${{ needs.docker-build.outputs.docker-image }}
      runs-on: '[{"runs-on": "n150"}]'
      allow-fail: true

  fail-notify:
    if: always()
    needs:
      - docker-build
      - build
      - test_full_model_passing
      - perf-benchmark
      - test_full_model_xfailing
      - test_models_ops
      - test_sweeps
    runs-on: Ubuntu-latest
    outputs:
      is-main: ${{ steps.branch-check.outputs.IS_MAIN }}
      failed: ${{ steps.check.outputs.failure }}
    steps:
      - name: Check if branch is main
        id: branch-check
        run: echo "IS_MAIN=$(if [ '${{ github.ref }}' == 'refs/heads/main' ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT
      - name: Check if the needed jobs succeeded or failed
        id: check
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-failures: test_models_ops, test_sweeps

  fail-send-msg:
    if: always()
    needs:
      - fail-notify
    runs-on: Ubuntu-latest
    steps:
      - name: Send Fail Notification
        if: ${{ needs.fail-notify.outputs.failed == 'true' && needs.fail-notify.outputs.is-main == 'true' }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Bad bad nightly: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}>",
              "channel": "C08HFLL9L56"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NIGHTLY_FAIL }}
