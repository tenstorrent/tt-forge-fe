name: Failure Inspector - Build and test

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Runs on'
        required: true
        type: string

jobs:
  docker-build:
    uses: ./.github/workflows/build-image.yml
    secrets: inherit

  build-test:
    runs-on: ${{ inputs.runs-on }}
    needs: docker-build
    container:
      image: ${{ needs.docker-build.outputs.docker-image }}
      options: --device /dev/tenstorrent/0
      volumes:
        - /dev/hugepages:/dev/hugepages
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /etc/udev/rules.d:/etc/udev/rules.d
        - /lib/modules:/lib/modules
        - /opt/tt_metal_infra/provisioning/provisioning_env:/opt/tt_metal_infra/provisioning/provisioning_env
        - /mnt/dockercache:/mnt/dockercache
    steps:
        - name: Set strings
          id: strings
          run: |
            echo "work-dir=$(pwd)" >> "$GITHUB_OUTPUT"
            echo "build-output-dir=$(pwd)/build" >> "$GITHUB_OUTPUT"
            git config --system --add safe.directory .
            chown -R root:root .

        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            submodules: recursive

        - name: Clean submodules
          run: |
            git submodule foreach --recursive git clean -ffdx
            git submodule foreach --recursive git reset --hard

        - name: ccache
          uses: hendrikmuhs/ccache-action@v1.2
          with:
            create-symlink: true
            key: forge-build-Release

        - name: Build (creates tvm and tt-forge-fe wheels)
          shell: bash
          run: |
            source env/activate
            python3 setup.py bdist_wheel
            cd third_party/tvm/python
            python3 setup.py bdist_wheel
            cd ../../..
            # cp third_party/tvm/python/dist/*.whl dist/

        # Test
        - name: Install wheels
          shell: bash
          run: |
            source env/activate
            pip install third_party/tvm/python/dist/tvm*.whl --force-reinstall
            pip install third_party/tvm/python/dist/forge*.whl --force-reinstall

        - name: Download tests.log
          uses: actions/download-artifact@v4
          with:
            name: tests-to-run

        - name: Run Test
          env:
            HF_TOKEN: ${{ secrets.HF_TOKEN }}
            HF_HOME: /mnt/dockercache/huggingface
            FORGE_MODELS_CACHE: /mnt/dockercache/forge_models_cache
            HF_HUB_DISABLE_PROGRESS_BARS: 1
            FORGE_DISABLE_REPORTIFY_DUMP: 1
          shell: bash
          run: |
            source env/activate
            pytest $(cat tests-${{inputs.runs-on}}.log) 2>&1 | tee pytest.log

        - name: Upload Test Log
          uses: actions/upload-artifact@v4
          if: failure()
          with:
            name: test-log-${{ inputs.runs-on }}
            path: pytest.log
