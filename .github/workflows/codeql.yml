name: "CodeQL Analysis"

on:
  push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
  schedule:
    - cron: '0 5 * * SUN'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: python
          build-mode: none
        - language: c-cpp
          build-mode: none
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        clean: true
        fetch-depth: 0 # Fetch all history and tags

    - name: Set cache path
      id: cache-path
      shell: bash
      run: echo "work-dir=$(pwd)" >> $GITHUB_OUTPUT

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  cppcheck:
    name: Cppcheck
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        clean: true
        fetch-depth: 0 # Fetch all history and tags

    - name: Run Cppcheck
      run: |
        sudo apt-get install -y cppcheck
        cppcheck --std=c++17 --check-level=exhaustive --enable=warning,information --platform=unix64 --suppress=uninitMemberVar forge/csrc || true

  analyze-cpp:
    name: Analyze c-cpp
    runs-on: builder
    permissions:
        # required for all workflows
        security-events: write
        packages: read
        actions: read
        contents: read

    strategy:
        fail-fast: false

    steps:
      - name: Setup
        id: cache-path
        shell: bash
        run: apt-get update && apt-get install -y ca-certificates software-properties-common build-essential

      - name: Git safe dir
        shell: bash
        run: |
          git config --system --add safe.directory ${{ steps.cache-path.outputs.work-dir }}
          chown -R root:root ${{ steps.cache-path.outputs.work-dir }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          clean: true
          fetch-depth: 0 # Fetch all history and tags

      - name: Cleanup submodules
        run: |
            git submodule foreach --recursive git clean -ffdx
            git submodule foreach --recursive git reset --hard

        # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: c-cpp
          build-mode: none

#     # If the analyze step fails for c-cpp with "We were unable to automatically build your code",
#     # modify the matrix above to set the build mode to "manual" for that language.
#       - name: ccache
#         uses: hendrikmuhs/ccache-action@v1.2
#         with:
#           create-symlink: true
#           max-size: 900M
#           key: forge-build-Debug
#         env:
#           CCACHE_NOHASHDIR: true
#           CCACHE_BASEDIR: ${{ steps.cache-path.outputs.work-dir }}

#       - name: Build
#         shell: bash
#         run: |
#             source env/activate
#             cmake -G Ninja \
#             -B build \
#             -DCMAKE_BUILD_TYPE=Debug \
#             -DCMAKE_C_COMPILER=clang \
#             -DCMAKE_CXX_COMPILER=clang++ \
#             -DCMAKE_C_COMPILER_LAUNCHER=ccache \
#             -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
#             -DCODE_COVERAGE=ON
#             cmake --build build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:c-cpp"
