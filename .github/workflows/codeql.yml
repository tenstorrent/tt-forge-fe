name: "CodeQL Analysis"

on:
  push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
  schedule:
    - cron: '0 5 * * SUN'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: c-cpp
          build-mode: manual
        - language: python
          build-mode: none
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    # If the analyze step fails for c-cpp with "We were unable to automatically build your code",
    # modify the matrix above to set the build mode to "manual" for that language.
    - name: ccache
      if: matrix.build-mode == 'manual'
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        create-symlink: true
        max-size: 900M
        key: forge-build-Debug
      env:
        CCACHE_NOHASHDIR: true
        CCACHE_BASEDIR: .

    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
          source env/activate
          cmake -G Ninja \
          -B build \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          -DCODE_COVERAGE=ON
          cmake --build build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
