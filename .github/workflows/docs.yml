name: Docs - Build & Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions for:
#   - downloading docker container
#   - allowing deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  packages: read

jobs:

  build:

    strategy:
      fail-fast: false
      matrix:
        build:
          - runs-on: self-hosted        

    runs-on: ${{ matrix.build.runs-on }}

    container:
      image: ghcr.io/tenstorrent/tt-forge/tt-forge-ubuntu-22-04:latest
      options: --user root --device /dev/tenstorrent/0
      volumes:
        - /dev/hugepages:/dev/hugepages
        - /dev/hugepages-1G:/dev/hugepages-1G 
        - /etc/udev/rules.d:/etc/udev/rules.d 
        - /lib/modules:/lib/modules
        - /opt/tt_metal_infra/provisioning/provisioning_env:/opt/tt_metal_infra/provisioning/provisioning_env

    env:
      MDBOOK_VERSION: 0.4.36
    steps:
    - uses: actions/checkout@v4
      with:
          submodules: recursive
          fetch-depth: 0 # Fetch all history and tags

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "work-dir=$(pwd)" >> "$GITHUB_OUTPUT"
        echo "build-output-dir=$(pwd)/build" >> "$GITHUB_OUTPUT"

    - name: Git safe dir
      run: git config --global --add safe.directory ${{ steps.strings.outputs.work-dir }}

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        create-symlink: true
        key: ${{ matrix.build.runs-on }}-runtime-${{ matrix.build.enable_runtime }}-${{ env.SDK_VERSION }}

    - name: Build
      shell: bash
      run: |
        source env/activate
        cmake -G Ninja -B build .
        cmake --build build

    - name: Install mdBook
      shell: bash
      run: |
        source env/activate
        apt install cargo -y
        cargo install --version ${MDBOOK_VERSION} mdbook

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5

    - name: Build Docs
      shell: bash
      run: |
        export PATH="/github/home/.cargo/bin:$PATH"
        cmake --build build -- docs
        # cmake --build build -- doxygen

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./build/docs/book

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
